// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InterviewBox.Models.Question = (function(_super) {

    __extends(Question, _super);

    function Question() {
      return Question.__super__.constructor.apply(this, arguments);
    }

    Question.prototype.paramRoot = 'question';

    Question.prototype.url = function() {
      return "/getQuestionModel/" + this.id;
    };

    Question.prototype.initialize = function(option) {
      return this.id = option['id'];
    };

    return Question;

  })(Backbone.Model);

  InterviewBox.Collections.UserQuestionsCollection = (function(_super) {

    __extends(UserQuestionsCollection, _super);

    function UserQuestionsCollection() {
      return UserQuestionsCollection.__super__.constructor.apply(this, arguments);
    }

    UserQuestionsCollection.prototype.model = InterviewBox.Models.Question;

    UserQuestionsCollection.prototype.url = function() {
      return "/questions/" + this.userId;
    };

    UserQuestionsCollection.prototype.initialize = function(option) {
      return this.userId = option['userId'];
    };

    return UserQuestionsCollection;

  })(Backbone.Collection);

  InterviewBox.Collections.TypeQuestionsCollection = (function(_super) {

    __extends(TypeQuestionsCollection, _super);

    function TypeQuestionsCollection() {
      return TypeQuestionsCollection.__super__.constructor.apply(this, arguments);
    }

    TypeQuestionsCollection.prototype.model = InterviewBox.Models.Question;

    TypeQuestionsCollection.prototype.url = function() {
      return "/questionsByType/" + this.type;
    };

    TypeQuestionsCollection.prototype.initialize = function(option) {
      return this.type = option['type'];
    };

    return TypeQuestionsCollection;

  })(Backbone.Collection);

  InterviewBox.Collections.AllQuestionsCollection = (function(_super) {

    __extends(AllQuestionsCollection, _super);

    function AllQuestionsCollection() {
      return AllQuestionsCollection.__super__.constructor.apply(this, arguments);
    }

    AllQuestionsCollection.prototype.model = InterviewBox.Models.Question;

    AllQuestionsCollection.prototype.url = '/questionsAll';

    return AllQuestionsCollection;

  })(Backbone.Collection);

}).call(this);
