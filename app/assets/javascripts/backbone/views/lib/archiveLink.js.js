// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InterviewBox.Views.ArchiveLinkView = (function(_super) {

    __extends(ArchiveLinkView, _super);

    function ArchiveLinkView() {
      return ArchiveLinkView.__super__.constructor.apply(this, arguments);
    }

    ArchiveLinkView.prototype.template = JST["backbone/templates/lib/question/eachQuestion_simple"];

    ArchiveLinkView.prototype.a_template = JST["backbone/templates/lib/question/eachQuestion_fullView"];

    ArchiveLinkView.prototype.b_template = JST["backbone/templates/lib/response/eachResponse_a"];

    ArchiveLinkView.prototype.c_template = JST["backbone/templates/lib/response/eachResponse_b"];

    ArchiveLinkView.prototype.d_template = JST["backbone/templates/lib/question/eachQuestion_download"];

    ArchiveLinkView.prototype.tagName = 'li';

    ArchiveLinkView.prototype.events = {
      'click .q_preview': 'previewVideo',
      'click .r_play': 'previewVideo'
    };

    ArchiveLinkView.prototype.initialize = function(option) {
      return this.current_user = option['current_user'];
    };

    ArchiveLinkView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      return this;
    };

    ArchiveLinkView.prototype.render_a = function() {
      $(this.el).html(this.a_template(this.model.toJSON()));
      this.$('div.timeago').timeago();
      return this;
    };

    ArchiveLinkView.prototype.render_b = function() {
      var self, user;
      self = this;
      user = new InterviewBox.Models.User({
        id: this.model.get('user_id')
      });
      user.fetch({
        success: function() {
          var comment;
          self.model.set({
            twitterId: user.get('uid')
          });
          $(self.el).html(self.b_template(self.model.toJSON()));
          comment = new InterviewBox.Views.Comment({
            response: self.model,
            current_user: self.current_user
          });
          return self.$('.responseComment').append(comment.render_b().el);
        }
      });
      return this;
    };

    ArchiveLinkView.prototype.render_c = function() {
      $(this.el).html(this.c_template(this.model.toJSON()));
      return this;
    };

    ArchiveLinkView.prototype.render_d = function() {
      $(this.el).html(this.d_template(this.model.toJSON()));
      this.$('div.timeago').timeago();
      return this;
    };

    ArchiveLinkView.prototype.previewVideo = function() {
      var player;
      player = new InterviewBox.Views.VideoPlayer({
        model: this.model
      });
      return $('html').append(player.render().el);
    };

    return ArchiveLinkView;

  })(Backbone.View);

}).call(this);
